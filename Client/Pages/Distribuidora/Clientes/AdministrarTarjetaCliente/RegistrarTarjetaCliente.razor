@*@using Compartido
@using Compartido.Dto.Distribuidora.General
@inject IDistribuidorasServices _distribuidorasService
@inject ILocalStorageService LocalStorage

<h3>Registrar Tarjeta Cliente</h3>

<!-- Formulario Registro -->
<div style="display: flex; justify-content: center;">
    <form style="width: 70%;">
        <!-- Informacion del responsable -->

        <fieldset class="form-group">
            <div class="form-group">
                <label for="NroTarjetaCliente" class="form-label mt-4">Numero de tarjeta</label>
                <input @bind=TarjetaCliente.NumeroTarjeta type="text" class="form-control" id="NroTarjetaCliente" placeholder="Ingrese numero de tarjeta.">
            </div>
            <div class="form-group">
                <label for="FechaExpiracion" class="form-label mt-4">Fecha de Expiracion</label>
                <input @bind=TarjetaCliente.FechaExpiracion type="date" class="form-control" id="FechaExpiracion" placeholder="Ingrese fechad expiracion">
            </div>
            <div class="form-group">
                <label for="NombreTitular" class="form-label mt-4">Nombre del titular</label>
                <input @bind=TarjetaCliente.NombreTitular type="text" class="form-control" id="NombreTitular" placeholder="Ingrese nombre del titular.">
            </div>
        </fieldset>
    </form>
</div>

<!-- Boton enviar -->

<div style="display: flex; justify-content: center; align-items: center; height: 250px;">
    <button @onclick="@(() => MostrarListado.InvokeAsync())" type="submit" class="btn btn-primary" id="btnVolver" style="font-size: 20px; margin-right: 20px">Volver atras</button>
    <button @onclick=Registrar type="submit" class="btn btn-primary" id="enviarFormulario" style="font-size: 20px;">Registrar</button>
</div>


@code {
    [Parameter]
    public EventCallback<bool> MostrarRegistrar { get; set; }

    [Parameter]
    public EventCallback<bool> MostrarListado { get; set; }


    public ServiceResponse<TarjetaClienteDTO> ResponseTarjetaCliente { get; set; }

    public TarjetaClienteDTO TarjetaCliente { get; set; }

    public string Distribuidora { get; set; }


    protected override void OnInitialized()
    {
        TarjetaCliente =  new TarjetaClienteDTO();
    }

    protected override async Task OnInitializedAsync()
    {
        Distribuidora = await LocalStorage.GetItemAsync<string>("idEmpresa");
        StateHasChanged();
    }


    public async void Registrar()
    {
        Guid dist = new Guid(Distribuidora);
        TarjetaCliente.EmpresaClienteId = dist;
        ResponseTarjetaCliente = await _distribuidorasService.CrearTarjetaCliente(TarjetaCliente);
        
        if(ResponseTarjetaCliente.Success)
            await this.MostrarListado.InvokeAsync();
    }
}*@