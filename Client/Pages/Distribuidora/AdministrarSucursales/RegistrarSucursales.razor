@using Compartido
@using Compartido.Dto.Distribuidora.General
@inject IDistribuidorasServices _distribuidorasService
@inject ILocalStorageService LocalStorage

<h3>Registrar Sucursales</h3>

<!-- Formulario Registro -->
<div style="display: flex; justify-content: center;">
    <form style="width: 70%;">
        <!-- Informacion del responsable -->

        <fieldset class="form-group">
            <div class="form-group">
                <label for="NroSucursal" class="form-label mt-4">NroSucursal</label>
                <input @bind=Sucursal.NroSucursal type="text" class="form-control" id="NroSucursal" placeholder="Ingrese numero de sucursal.">
            </div>
            <div class="form-group">
                <label for="Direccion" class="form-label mt-4">Direccion</label>
                <input @bind=Sucursal.Direccion type="text" class="form-control" id="Direccion" placeholder="Ingrese direccion.">
            </div>
            <div class="form-group">
                <label for="Telefono" class="form-label mt-4">Telefono</label>
                <input @bind=Sucursal.Telefono type="text" class="form-control" id="Telefono" placeholder="Ingrese telefono.">
            </div>
        </fieldset>
    </form>
</div>

<!-- Boton enviar -->

<div style="display: flex; justify-content: center; align-items: center; height: 250px;">
    <button @onclick="@(() => MostrarListado.InvokeAsync())" type="submit" class="btn btn-primary" id="btnVolver" style="font-size: 20px; margin-right: 20px">Volver atras</button>
    <button @onclick=Registrar type="submit" class="btn btn-primary" id="enviarFormulario" style="font-size: 20px;">Registrar</button>
</div>


@code {
    [Parameter]
    public EventCallback<bool> MostrarRegistrar { get; set; }

    [Parameter]
    public EventCallback<bool> MostrarListado { get; set; }


    public ServiceResponse<SucursalesDTO> ResponseSucursal { get; set; }

    public SucursalesDTO Sucursal { get; set; }

    public string Distribuidora { get; set; }


    protected override void OnInitialized()
    {
        Sucursal =  new SucursalesDTO();
    }

    protected override async Task OnInitializedAsync()
    {
        Distribuidora = await LocalStorage.GetItemAsync<string>("IdDistribuidora");
        StateHasChanged();
    }


    public async void Registrar()
    {
        Guid dist = new Guid(Distribuidora);
        Sucursal.EmpresaDistribuidoraId = dist;
        ResponseSucursal = await _distribuidorasService.CrearSucursal(Sucursal);
        
        if(ResponseSucursal.Success)
            await this.MostrarListado.InvokeAsync();
    }
}
