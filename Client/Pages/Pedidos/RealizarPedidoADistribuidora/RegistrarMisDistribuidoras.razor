@*@inject ILocalStorageService LocalStorage
@inject IDistribuidorasServices _distribuidoraService

<h3>Agregar distribuidora</h3>

@if (ListaDistribuidoraFiltrado != null)
{
    <form style="width: 70%;">
        <fieldset class="form-group">
            <div class="form-group">
                <label for="NombreRubro" class="form-label mt-4">Empresa</label>

                <select @bind=DistribuidoraSeleccionada.Id class="form-select" id="rubroNegocio">
                    @foreach (var dist in ListaDistribuidoraFiltrado)
                    {
                        <option value=@dist.Id>@dist.NombreEmpresa</option>
                    }
                </select>

            </div>
        </fieldset>
    </form>
}
<div style="display: flex; justify-content: center; align-items: center; height: 250px;">
    <button @onclick="@(() => Volver.InvokeAsync())" type="submit" class="btn btn-primary" id="btnVolver" style="font-size: 20px; margin-right: 20px">Volver atras</button>
    <button @onclick=Registrar type="submit" class="btn btn-primary" id="enviarFormulario" style="font-size: 20px;">Registrar</button>
</div>


@code {

    [Parameter]
    public EventCallback<bool> Volver { get; set; }

    [Parameter]
    public List<EmpresaDistribuidoraDTO> ListaDistribuidoraFiltrado { get; set; }

    public ClientesDistribuidoraDTO ClienteDistribuidora { get; set; } = new ClientesDistribuidoraDTO();

    public ServiceResponse<ClientesDistribuidoraDTO> ReponseClienteDistribuidora { get; set; }

    public EmpresaDistribuidoraDTO DistribuidoraSeleccionada { get; set; } = new EmpresaDistribuidoraDTO();

    public Guid IdEmpresaCliente { get; set; }



    protected override async Task OnInitializedAsync()
    {
        IdEmpresaCliente = new Guid(await LocalStorage.GetItemAsync<string>("idEmpresa"));
    }

    public async void Registrar()
    {
        ClienteDistribuidora.ClientesId = IdEmpresaCliente;
        ClienteDistribuidora.DistribuidorasId = DistribuidoraSeleccionada.Id;

        ReponseClienteDistribuidora = await _distribuidoraService.InsertarDistribuidorasDeCliente(ClienteDistribuidora);

        if (ReponseClienteDistribuidora.Success)
            await this.Volver.InvokeAsync();
    }


}
*@