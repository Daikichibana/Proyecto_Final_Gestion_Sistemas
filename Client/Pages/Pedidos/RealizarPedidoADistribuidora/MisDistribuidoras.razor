@page "/MisDistribuidoras"
@inject IDistribuidorasServices _distribuidoraService

@if (ListaDistribuidoras != null && ListaRubros != null && Vista == 1)
{
    <h3>Mis Distribuidoras</h3>
    <button @onclick="RegistrarNuevo" type="button" class="btn btn-primary mb-2">Agregar Nueva Distribuidora</button>

    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Nombre de la empresa</th>
                <th scope="col">Correo de la empresa</th>
                <th scope="col">Rubro de la empresa</th>
                <th scope="col">Opciones</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var distribuidora in ListaDistribuidoras.Data)
            {
                @if (verificarSiPertenece(distribuidora.Id))
                {
                    <tr>
                        <td>@distribuidora.NombreEmpresa</td>
                        <td>@distribuidora.EmailEmpresa</td>
                        <td>@obtenerNombreRubro(distribuidora.RubroId)</td>
                        <td>
                            <button @onclick="() => IrCatalogo(distribuidora)" type="button" class="btn btn-success">Realizar Pedido</button>
                            <button @onclick="() => eliminarDistribuidora(distribuidora.Id)" type="button" class="btn btn-danger ml-3">Eliminar</button>
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
}
else if (Vista == 2)
{
    <RegistrarMisDistribuidoras ListaDistribuidoraFiltrado="@ListaDistribuidoraFiltrado"
                            Volver="() => Volver()" />
}
else if (Vista == 3)
{
    <CatalogoProductos EmpresaDistribuidora="@DistribuidoraSeleccionada" />    
}
else
{
    <p>@Loading</p>
}

@code {
    public ServiceResponse<List<ClientesDistribuidoraDTO>> ListaDistribuidorasDeCliente { get; set; }
    public ServiceResponse<List<EmpresaDistribuidoraDTO>> ListaDistribuidoras { get; set; }
    public ServiceResponse<List<RubroDTO>> ListaRubros { get; set; }
    public List<EmpresaDistribuidoraDTO> ListaDistribuidoraFiltrado { get; set; }
    public EmpresaDistribuidoraDTO DistribuidoraSeleccionada { get; set; } = new EmpresaDistribuidoraDTO();
    public string Loading { get; set; }
    public int Vista { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        Loading = "Cargando...";
        ListaDistribuidorasDeCliente = await _distribuidoraService.ObtenerDistribuidorasDeCliente();
        ListaDistribuidoras = await _distribuidoraService.ObtenerTodoDistribuidora();
        ListaRubros = await _distribuidoraService.ObtenerTodoRubro();
        filtrarLista();
        StateHasChanged();
    }

    public string obtenerNombreRubro(Guid Id)
    {
        return ListaRubros.Data.Where(p => p.Id.Equals(Id)).FirstOrDefault().Nombre;
    }

    public bool verificarSiPertenece(Guid Id)
    {
        var elemento = ListaDistribuidorasDeCliente.Data.Where(p => p.DistribuidorasId.Equals(Id)).FirstOrDefault();

        if (elemento == null)
            return false;

        return true;
    }

    public async void eliminarDistribuidora(Guid Id)
    {
        var elemento = ListaDistribuidorasDeCliente.Data.Where(p => p.DistribuidorasId.Equals(Id)).FirstOrDefault();

        _distribuidoraService.EliminarDistribuidorasDeCliente(elemento.Id);
        ListaDistribuidorasDeCliente = await _distribuidoraService.ObtenerDistribuidorasDeCliente();
        StateHasChanged();
    }

    public void RegistrarNuevo()
    {
        Vista = 2;
        filtrarLista();
        StateHasChanged();
    }

    public async void Volver()
    {
        Vista = 1;
        ListaDistribuidorasDeCliente = await _distribuidoraService.ObtenerDistribuidorasDeCliente();
        StateHasChanged();
    }

    public void filtrarLista()
    {
        ListaDistribuidoraFiltrado = new List<EmpresaDistribuidoraDTO>();

        foreach (var empresa in ListaDistribuidoras.Data)
        {
            if (!this.verificarSiPertenece(empresa.Id))
            {
                ListaDistribuidoraFiltrado.Add(empresa);
            }
        }

        StateHasChanged();
    }

    public void IrCatalogo(EmpresaDistribuidoraDTO emp)
    {
        DistribuidoraSeleccionada = emp;
        Vista = 3;
        StateHasChanged();
    }

}
