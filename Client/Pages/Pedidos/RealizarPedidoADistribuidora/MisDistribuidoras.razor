@page "/MisDistribuidoras"
@inject IDistribuidorasServices _distribuidoraService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

@if (ResponseDistribuidorasDeCliente != null && Vista == 1)
{
    <h3>Mis Distribuidoras</h3>
    <button @onclick="RegistrarNuevo" type="button" class="btn btn-primary mb-2">Agregar Nueva Distribuidora</button>

    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Nombre de la empresa</th>
                <th scope="col">Correo de la empresa</th>
                <th scope="col">Rubro de la empresa</th>
                <th scope="col">Opciones</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var distCliente in ResponseDistribuidorasDeCliente.Data)
            {
                <tr>
                    <td>@distCliente.distribuidoras.NombreEmpresa</td>
                    <td>@distCliente.distribuidoras.EmailEmpresa</td>
                    <td>@distCliente.distribuidoras.Rubro.Nombre</td>
                    <td>
                        <button @onclick="() => IrCatalogo(distCliente.distribuidoras)" type="button" class="btn btn-success">Realizar Pedido</button>
                        <button @onclick="() => eliminarDistribuidora(distCliente.Id)" type="button" class="btn btn-danger ml-3">Quitar</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}
else if (Vista == 2)
{
    <RegistrarMisDistribuidoras />
}
else if (Vista == 3)
{
    <CatalogoProductos EmpresaDistribuidora="@DistribuidoraSeleccionada" /> 
}
else
{
    <p>@Loading</p>
}

@code {
    public ServiceResponse<List<ClientesDistribuidoraDTO>> ResponseDistribuidorasDeCliente { get; set; }
    public EmpresaDistribuidoraDTO DistribuidoraSeleccionada { get; set; } = new EmpresaDistribuidoraDTO();

    public Guid IdEmpresaSesion { get; set; }
    public string Loading { get; set; } = "Cargando...";
    public int Vista { get; set; } = 1;

    protected override async Task OnInitializedAsync()
    {
        IdEmpresaSesion = new Guid(await LocalStorage.GetItemAsync<string>("idEmpresa"));
        ResponseDistribuidorasDeCliente = await _distribuidoraService.ObtenerDistribuidorasDeCliente(IdEmpresaSesion);

        StateHasChanged();
    }


    public async void eliminarDistribuidora(Guid Id)
    {
        await _distribuidoraService.EliminarDistribuidorasDeCliente(Id);

        NavigationManager.NavigateTo("/MisDistribuidoras", forceLoad:true);
        StateHasChanged();
    }

    public void RegistrarNuevo()
    {
        Vista = 2;
        StateHasChanged();
    }

    public void IrCatalogo(EmpresaDistribuidoraDTO emp)
    {
        DistribuidoraSeleccionada = emp;
        Vista = 3;
        StateHasChanged();
    }

}