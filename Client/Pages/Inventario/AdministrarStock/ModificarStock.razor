@inject IInventarioServices _inventarioServices
@inject ILocalStorageService LocalStorage
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager

@if (ResponseTipoProducto != null)
{
    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Nombre del producto</th>
                <th scope="col">Tipo de Producto</th>
                <th scope="col">Descripcion</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stock in ListaStock.Data)
            {
                <tr>
                    <td><input type="text" @bind=stock.Producto.Nombre/></td>
                    <td>
                        <select @bind=stock.Producto.TipoProductoId>
                            @foreach (var tipoProducto in ResponseTipoProducto.Data)
                            {
                                @if (tipoProducto.Id == stock.Producto.TipoProductoId)
                                {
                                    <option value="@tipoProducto.Id" selected>@tipoProducto.Nombre</option>
                                }
                                else
                                {
                                    <option value="@tipoProducto.Id">@tipoProducto.Nombre</option>
                                }
                            }
                        </select>
                    </td>
                    <td><input type="text" @bind=stock.Producto.Descripcion /></td>
                </tr>
            }
        </tbody>
    </table>

    <button @onclick=ActualizarProductos class="btn btn-success"> Guardar Productos</button>
}

@code
{
    [Parameter]
    public ServiceResponse<List<StockDTO>> ListaStock { get; set; }

    public ServiceResponse<List<TipoProductoDTO>> ResponseTipoProducto { get; set; }

    public Guid IdEmpresaSesion { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IdEmpresaSesion = new Guid(await LocalStorage.GetItemAsync<string>("idEmpresa"));
        ResponseTipoProducto = await _inventarioServices.ObtenerTodosLosTipoProducto();
    }


    public async void ActualizarProductos()
    {
        List<ProductoDTO> productos = new List<ProductoDTO>();
        foreach (var stock in ListaStock.Data)
        {
            productos.Add(stock.Producto);
        }

        var response = await _inventarioServices.ActualizarProducto(productos);

        if (response.Success)
            await JsRuntime.InvokeVoidAsync("alert", "Productos Modificados Correctamente.");
        else
            await JsRuntime.InvokeVoidAsync("alert", "No se pudo Modificar correctamente los productos.");

        NavigationManager.NavigateTo("/administrarStock", forceLoad: true);

    }

}
