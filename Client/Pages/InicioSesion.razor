@page "/login"
@using CAPAS.CAPA.DOMINIO.USUARIOS.DTO
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject IUsuariosServices usuariosServices
@inject IJSRuntime JsRuntime

<h3>Inicio sesion</h3>

<EditForm Model="user" OnSubmit="HandleLogin">
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.NombreUsuario" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Clave" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Iniciar Sesion</button>
</EditForm>

@code {
    private UsuarioDTO user = new UsuarioDTO();

    private async void HandleLogin()
    {
        var usuarioValido = usuariosServices.ValidarUsuario(user).Data;

        if (usuarioValido)
        {
            Console.WriteLine("Log me in!");
            await LocalStorage.SetItemAsync<string>("username", user.NombreUsuario);
            await LocalStorage.SetItemAsync<string>("rol", "Administrador");
            await AuthStateProvider.GetAuthenticationStateAsync();
            NavigationManager.NavigateTo("");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Usuario no valido.");
        }
    }
}