@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider

<div class="page">

    @*
    <div class="sidebar">
    <NavMenu />
    </div>
    *@


    <div class="main">
        @*
        <div class="top-row px-4">
        </div>
        *@
        <nav class="navbar navbar-dark bg-dark">

            <a class="navbar-brand" href="/">
                <img src="https://cdn-icons-png.flaticon.com/512/3649/3649204.png" width="30" height="30" class="d-inline-block align-top" alt="">
                Sistema de pedido
            </a>

            <form class="form-inline">
                <AuthorizeView>
                    <Authorized>   
                        <button class="btn btn-outline-danger my-2 my-sm-0 m-1" @onclick= "() => CerrarSesion()" @onclick:preventDefault="true">Cerrar Sesion</button>
                    </Authorized>
                    <NotAuthorized>
                        <button class="btn btn-outline-success my-2 my-sm-0 m-1" @onclick= "() => Redireccionar(LinkRegister)" @onclick:preventDefault="true" >Registrarse</button>
                        <button class="btn btn-outline-success my-2 my-sm-0 m-1" @onclick= "() => Redireccionar(LinkLogin)" @onclick:preventDefault="true" >Iniciar Sesion</button>
                    </NotAuthorized>
                </AuthorizeView>
            </form>

        </nav>
        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

@code {
    public string LinkLogin { get; set; } = "/login";
    public string LinkRegister { get; set; } = "/registro";

    public void Redireccionar(string direccion)
    {
        NavigationManager.NavigateTo(direccion, forceLoad: true);
    }

    public async void CerrarSesion()
    {
        List<string> variableLocalStorage = new List<string>();
        variableLocalStorage.Add("username");
        variableLocalStorage.Add("idEmpresa");
        variableLocalStorage.Add("roles");
        variableLocalStorage.Add("EsDistribuidora");
        variableLocalStorage.Add("NombreEmpresa");

        await LocalStorage.RemoveItemsAsync(variableLocalStorage);
        await AuthStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/", forceLoad: true);
    }
}